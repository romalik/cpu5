#!/usr/bin/env python3
import sys
import os

asm_srcs = []
c_srcs = []

object_files = ['/opt/cpu5/lib/crt0.o', '/opt/cpu5/lib/crt1.o']

gen_hex = False

for i in range(len(sys.argv)):
    arg = sys.argv[i]
    if arg.endswith(".s"):
        asm_srcs.append(arg)

    if arg.endswith(".c"):
        c_srcs.append(arg)

    if arg == "-o":
        output = sys.argv[i+1]
        i = i+1

    if arg == "--hex":
        gen_hex = True


        

tmp_files = []

print("cpu5 build")
print("c_srcs: " + str(c_srcs))
print("asm_srcs: " + str(asm_srcs))
print("output: " + output)

commands = []

for c_file in c_srcs:
    asm_file = '/tmp/' + os.path.basename(c_file)[:-1] + 's'
    cmd = "smlrc " + c_file + " " + asm_file
    asm_srcs.append(asm_file)
    tmp_files.append(asm_file)
    commands.append(cmd)


for asm_file in asm_srcs:
    o_file = '/tmp/' + os.path.basename(asm_file)[:-1] + 'o'
    cmd = "cpu5as " + asm_file + " " + o_file
    object_files.append(o_file)
    tmp_files.append(o_file)

    commands.append(cmd)

object_files.append('/opt/cpu5/lib/crt_end.o')

cmd_ld = "cpu5ld -bss 0x8000 -v "
for o_file in object_files:
    cmd_ld = cmd_ld + o_file + " "

if gen_hex:
    tmp_output = "/tmp/" + os.path.basename(output)
    cmd_ld = cmd_ld + "-o " + tmp_output
    tmp_files.append(tmp_output)
    commands.append(cmd_ld)
    commands.append("objcopy --output-target=ihex --input-target=binary " + tmp_output + " " + output)

else:
    cmd_ld = cmd_ld + "-o " + output
    commands.append(cmd_ld)


#print("Build sequence:")
#for cmd in commands:
#    print(cmd)

for cmd in commands:
    print(" >> " + cmd)
    if os.system(cmd):
        print("Error")
        exit(1)


for file in tmp_files:
    print(" >> rm " + file)
    os.system("rm " + file)



print("Build successful")