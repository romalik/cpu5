section config

address_width 13
control_width 16

end

section control_word

#n  active  name
0   H       s0
1   H       s1
2   H       s2
3   H       c0_0
4   H       c0_1
5   H       c1_0
6   H       c1_1
7   H       seq_rst

8   H       a_i
9   H       a_o
10  H       mread
11  H       mwrite
12  H       sel_a
13  H       iv_o
14  H       sel_high
15  H       load_fault

end

section alias

#0000
b_o     c0_0 #0000
#0001
sh_o    c0_0 s0
#0010
sl_o    c0_0 s1
#0011
mh_o    c0_0 s0 s1
#0100
ml_o    c0_0 s2
#0101
alu_l   c0_0 s0 s2
#0110
xh_o    c0_0 s1 s2
#0111
xl_o    c0_0 s0 s1 s2

#0000
pc_a    c0_1 #0000
#0001
s_a     c0_1 s0
#0010
alu_d   c0_1 s1
#0011
mf_a    c0_1 s0 s1
#0100
aluf_d  c0_1 s2
#0101
f_o     c0_1 s0 s2
#0110
ir_a    c0_1 s1 s2
#0111
x_a     c0_1 s0 s1 s2

#0000
off_i   c1_0 #0000
#0001
sh_i    c1_0 s0
#0010
sl_i    c1_0 s1
#0011
b_i     c1_0 s0 s1
#0100
ml_i    c1_0 s2
#0101
ei      c1_0 s0 s2
#0110
xh_i    c1_0 s1 s2
#0111
xl_i    c1_0 s0 s1 s2

#0000
ir_i    c1_1 #0000
#0001
sl--    c1_1 s0
#0010
sl++    c1_1 s1
#0011
s_rst   c1_1 s0 s1
#0100
f_i     c1_1 s2
#0101
mh_i    c1_1 s0 s2
#0110
pc++    c1_1 s1 s2
#0111
pc_switch c1_1 s0 s1 s2



end

section default

end

section code

#int    cmd     arg     seq     command

######################## Section FETCH        #########################

                                                            #fetch + latch irq
*       ****    ****    0000    c0_1 c1_1 mread # + select=0000 (ir_i pc_a)

                                                            #HLT        hlt
0       0000    0000    0001    seq_rst

                                                            #DI        di
-       ----    0001    0001    iv_o        # (disable)
-       ----    ----    0010    pc++ seq_rst

                                                            #ei         ei
-       ----    0010    0001    ei          
-       ----    ----    0010    pc++ seq_rst

                                                            #nop         nop
-       ----    0011    0001    pc++ seq_rst          

                                                            #[x]->[m]    cpy 
-       ----    0100    0001    x_a a_i mread          
-       ----    ----    0010    mf_a a_o mwrite          
-       ----    ----    0011    pc++ seq_rst

                                                            #[x]<->[m]   swp
-       ----    0101    0001    seq_rst          

                                                            #x++         x++
-       ----    0111    0001    pc_switch                   #will work because 111 in cmp_op
-       ----    ----    0010    pc++          
-       ----    ----    0011    pc_switch          
-       ----    ----    0100    pc++ seq_rst


                                                            #IRET       iret
-       ----    1111    0001    pc_switch   # (comparison overriden by 0x0f in instruction)
-       ----    ----    0010    sl++
-       ----    ----    0011    a_i s_a mread
-       ----    ----    0100    a_o xl_i        # pop PC_L from 0xFFFE
-       ----    ----    0101    sl++
-       ----    ----    0110    a_i s_a mread
-       ----    ----    0111    a_o xh_i        # pop PC_H from 0xFFFF
-       ----    ----    1000    a_i  sel_a mread s_rst  # A = [0xFFBF] s_rst because A was saved at +0x03
-       ----    ----    1001    sh_i sel_a mread        # SH = [0xFFBE] !!!! MAYBE CROSSED!
-       ----    ----    1010    sl_i sel_a mread        # SL = [0xFFBD] !!!! MAYBE CROSSED!
-       ----    ----    1011    pc_switch
-       ----    ----    1100    ei          # (enable ints and paging, A, S, PC in user page)
-       ----    ----    1101    seq_rst

######################## 001 SYSCALL        ######################### opcode: 0x1X

                                                            #syscall
-       0001    1111    0001    pc_switch
-       ----    ----    0010    sl_o sel_a mwrite         # (sel_a will set addr to isr regs + 0x01) [0xFFBD] = SL (sel_a disable paging) !!!! MAYBE CROSSED!
-       ----    ----    0011    sh_o sel_a mwrite         # (sel_a will set addr to isr regs + 0x02) [0xFFBE] = SH                        !!!! MAYBE CROSSED!
-       ----    ----    0100    a_o  sel_a mwrite s_rst   # (sel_a will set addr to isr regs + 0x03) [0xFFBF] = A  !!!!! WILL WRITE TO + 0x03 because of s_rst
-       ----    ----    0101    sl--                      # (SP = 0xffff)
-       ----    ----    0110    a_i xh_o
-       ----    ----    0111    a_o s_a mwrite            # (pc h will be at 0xffff) [0xFFFF] = PC_H
-       ----    ----    1000    a_i xl_o
-       ----    ----    1001    sl--                      # (SP = 0xfffe)
-       ----    ----    1010    a_o s_a mwrite            # (pc l will be at 0xfffe) [0xFFFE] = PC_L
-       ----    ----    1011    xl_i iv_o                 # (get vector, disable interrupts)
-       ----    ----    1100    a_i sh_o                  # (get 0xff)
-       ----    ----    1101    a_o xh_i                  # X = 0xFF00 | int_vec
-       ----    ----    1110    sl--                      # (SP = 0xfffd)
-       ----    ----    1111    seq_rst pc_switch


######################## 010 IRETF          ######################### opcode: 0x2X

                                                            #IRETf       iretf
-       0010    1111    0001    pc_switch   # (comparison overriden by 0x0f in instruction)
-       ----    ----    0010    sl++
-       ----    ----    0011    a_i s_a mread
-       ----    ----    0100    a_o xl_i        # pop PC_L from 0xFFFE
-       ----    ----    0101    sl++
-       ----    ----    0110    a_i s_a mread
-       ----    ----    0111    a_o xh_i        # pop PC_H from 0xFFFF
-       ----    ----    1000    a_i  sel_a mread s_rst  # A = [0xFFBF] s_rst because A was saved at +0x03
-       ----    ----    1001    sh_i sel_a mread        # SH = [0xFFBE]
-       ----    ----    1010    sl_i sel_a mread        # SL = [0xFFBD]
-       ----    ----    1011    pc_switch
-       ----    ----    1100    load_fault off_i
-       ----    ----    1101    load_fault ei                           # (enable ints and paging, A, S, PC in user page)
-       ----    ----    1110    seq_rst ir_i load_fault      # (enable ints and paging, A, S, PC in user page)




######################## 101 JUMP           ######################### opcode: 0xAX
                                                            #JUMP       jc, jnc, jz, jnz, jmp
-       1010    ****    0001    pc++
-       ----    ****    0010    pc_switch seq_rst



######################## 101 ALU THREE-ADDRESS  ##################### opcode: 0xBX R_A R_B R_D
                                                            #ALU        add r_d, r_a, r_b  sub .... .....
-       1011    ****    0001    pc++
-       ----    ****    0010    pc_a off_i mread    #can combine - pc_a and off_i are on same select
-       ----    ****    0011    mf_a a_i mread      #read r_a
-       ----    ****    0100    pc++
-       ----    ****    0101    pc_a off_i mread     
-       ----    ****    0110    mf_a b_i mread      #can combine - mf_a and b_i are on same select, read r_b
-       ----    ****    0111    pc++
-       ----    ****    1000    alu_l
-       ----    ****    1001    pc_a off_i mread    #load target addr

-       ----    ****    1010    alu_d a_i           #do alu
-       ----    ****    1011    s2 aluf_d f_i       #select aluf_d and f_i, can combine

-       ----    ****    1100    mf_a a_o mwrite

-       ----    ****    1101    pc++ seq_rst

######################## 110 ALU           ######################### opcode: 0xCX
                                                            #ALU        add, sub, .....
-       1100    ****    0001    alu_d a_i
-       ----    ****    0010    s2 c0_1 c1_1     #select aluf_d and f_i
-       ----    ****    0011    pc++ seq_rst


######################## Section 001 A -> [X] ######################### opcode: 0xDX
                                                            #A->B       mov b, a
-       1101    0000    0001    b_i a_o
-       ----    ----    0010    pc++ seq_rst

                                                            #A->SL      mov sl, a
-       ----    0001    0001    sl_i a_o
-       ----    ----    0010    pc++ seq_rst

                                                            #A->SH      mov sh, a
-       ----    0010    0001    sh_i a_o
-       ----    ----    0010    pc++ seq_rst

                                                            #A->ML      mov ml, a
-       ----    0011    0001    ml_i a_o
-       ----    ----    0010    pc++ seq_rst

                                                            #A->MH      mov mh, a
-       ----    0100    0001    mh_i a_o
-       ----    ----    0010    pc++ seq_rst

                                                            #A->(M+#)  mov [m+#], a
-       ----    0101    0001    pc++
-       ----    ----    0010    pc_a off_i mread
-       ----    ----    0011    mf_a a_o mwrite
-       ----    ----    0100    pc++ seq_rst

                                                            #A->XL      mov xl, a
-       ----    0110    0001    xl_i a_o
-       ----    ----    0010    pc++ seq_rst

                                                            #A->XH      mov xh, a
-       ----    0111    0001    xh_i a_o
-       ----    ----    0010    pc++ seq_rst

                                                            #A->(S--)   push a
-       ----    1001    0001    s_a a_o mwrite
-       ----    ----    0010    sl--
-       ----    ----    0011    pc++ seq_rst

                                                            #A->F       mov f, a
-       ----    1010    0001    f_i a_o
-       ----    ----    0010    pc++ seq_rst

                                                            #A->(X)     mov [x], a
-       ----    1011    0001    x_a a_o mwrite
-       ----    ----    0010    pc++ seq_rst

                                                            #DLIT S     ldd s
-       ----    1100    0001    pc++
-       ----    ----    0010    pc_a mread a_i
-       ----    ----    0011    a_o sl_i
-       ----    ----    0100    pc++
-       ----    ----    0101    pc_a mread a_i
-       ----    ----    0110    a_o sh_i
-       ----    ----    0111    pc++ seq_rst

                                                            #DLIT M     ldd m
-       ----    1101    0001    pc++
-       ----    ----    0010    pc_a mread a_i
-       ----    ----    0011    a_o ml_i
-       ----    ----    0100    pc++
-       ----    ----    0101    pc_a mread a_i
-       ----    ----    0110    a_o mh_i
-       ----    ----    0111    pc++ seq_rst

                                                            #DLIT X     ldd x
-       ----    1110    0001    pc++
-       ----    ----    0010    pc_a mread a_i
-       ----    ----    0011    a_o xl_i
-       ----    ----    0100    pc++
-       ----    ----    0101    pc_a mread a_i
-       ----    ----    0110    a_o xh_i
-       ----    ----    0111    pc++ seq_rst

                                                            #           ld r#, #
-       ----    1111    0001    pc++
-       ----    ----    0010    pc_a off_i mread
-       ----    ----    0011    pc++
-       ----    ----    0100    pc_a mread a_i
-       ----    ----    0101    mf_a a_o mwrite
-       ----    ----    0110    pc++ seq_rst


######################## Section 010 A <- [X] ######################### opcode: 0xEX
                                                            #A<-B       mov a, b
-       1110    0000    0001    b_o a_i
-       ----    ----    0010    pc++ seq_rst

                                                            #A<-SL      mov a, sl
-       ----    0001    0001    sl_o a_i
-       ----    ----    0010    pc++ seq_rst

                                                            #A<-SH      mov a, sh
-       ----    0010    0001    sh_o a_i
-       ----    ----    0010    pc++ seq_rst

                                                            #A<-ML      mov a, ml
-       ----    0011    0001    ml_o a_i
-       ----    ----    0010    pc++ seq_rst

                                                            #A<-MH      mov a, mh
-       ----    0100    0001    mh_o a_i
-       ----    ----    0010    pc++ seq_rst

                                                            #A<-(M+#)   mov a, [m+#]
-       ----    0101    0001    pc++
-       ----    ----    0010    pc_a off_i mread
-       ----    ----    0011    mf_a a_i mread
-       ----    ----    0100    pc++ seq_rst

                                                            #A<-XL      mov a, xl
-       ----    0110    0001    xl_o a_i
-       ----    ----    0010    pc++ seq_rst

                                                            #A<-XH      mov a, xh
-       ----    0111    0001    xh_o a_i
-       ----    ----    0010    pc++ seq_rst


                                                            #A<-(++S)     pop a
-       ----    1001    0001    sl++
-       ----    ----    0010    s_a mread a_i
-       ----    ----    0011    pc++ seq_rst

                                                            #A<-F       mov a, f
-       ----    1010    0001    f_o a_i
-       ----    ----    0010    pc++ seq_rst

                                                            #A<-(X)     mov a, [x]
-       ----    1011    0001    x_a mread a_i
-       ----    ----    0010    pc++ seq_rst

                                                            #A<-LIT     ld a
-       ----    1100    0001    pc++
-       ----    ----    0010    pc_a mread a_i
-       ----    ----    0011    pc++ seq_rst
                                                            #           movsm
-       ----    1110    0001    a_i ml_o
-       ----    ----    0010    a_o sl_i
-       ----    ----    0011    a_i mh_o
-       ----    ----    0100    a_o sh_i
-       ----    ----    0101    pc++ seq_rst

                                                            #           movms
-       ----    1111    0001    a_i sl_o
-       ----    ----    0010    a_o ml_i
-       ----    ----    0011    a_i sh_o
-       ----    ----    0100    a_o mh_i
-       ----    ----    0101    pc++ seq_rst

######################## Section 111       ######################### opcode: 0xFX

                                                            #           push xm (xl xh ml mh)
-       1111    0000    0001    xl_o a_i                                                            
-       ----    ----    0010    s_a a_o mwrite
-       ----    ----    0011    sl--
-       ----    ----    0100    xh_o a_i
-       ----    ----    0101    s_a a_o mwrite
-       ----    ----    0110    sl--
-       ----    ----    0111    ml_o a_i
-       ----    ----    1000    s_a a_o mwrite
-       ----    ----    1001    sl--
-       ----    ----    1010    mh_o a_i
-       ----    ----    1011    s_a a_o mwrite
-       ----    ----    1100    sl--
-       ----    ----    1101    pc++ seq_rst

                                                            #           pop mx (mh ml xh xl)
-       ----    0001    0001    sl++
-       ----    ----    0010    s_a mread a_i
-       ----    ----    0011    mh_i a_o
-       ----    ----    0100    sl++
-       ----    ----    0101    s_a mread a_i
-       ----    ----    0110    ml_i a_o
-       ----    ----    0111    sl++
-       ----    ----    1000    s_a mread a_i
-       ----    ----    1001    xh_i a_o
-       ----    ----    1010    sl++
-       ----    ----    1011    s_a mread a_i
-       ----    ----    1100    xl_i a_o
-       ----    ----    1101    pc++ seq_rst

                                                            #           sp+=2
-       ----    0010    0001    sl++
-       ----    ----    0010    sl++
-       ----    ----    0011    pc++ seq_rst

                                                            #           sp+=8
-       ----    0011    0001    sl++
-       ----    ----    0010    sl++
-       ----    ----    0011    sl++
-       ----    ----    0100    sl++
-       ----    ----    0101    sl++
-       ----    ----    0110    sl++
-       ----    ----    0111    sl++
-       ----    ----    1000    sl++
-       ----    ----    1001    pc++ seq_rst

                                                            #           sp-=2
-       ----    0100    0001    sl--
-       ----    ----    0010    sl--
-       ----    ----    0011    pc++ seq_rst

                                                            #           sp-=8
-       ----    0101    0001    sl--
-       ----    ----    0010    sl--
-       ----    ----    0011    sl--
-       ----    ----    0100    sl--
-       ----    ----    0101    sl--
-       ----    ----    0110    sl--
-       ----    ----    0111    sl--
-       ----    ----    1000    sl--
-       ----    ----    1001    pc++ seq_rst



                                                            # push [m+#]
-       ----    0110    0001    pc++
-       ----    ----    0010    pc_a off_i mread
-       ----    ----    0011    mf_a a_i mread
-       ----    ----    0100    s_a a_o mwrite
-       ----    ----    0101    sl--
-       ----    ----    0110    pc++ seq_rst

                                                            # pop [m+#]
-       ----    0111    0001    sl++
-       ----    ----    0010    s_a mread a_i
-       ----    ----    0011    pc++
-       ----    ----    0100    pc_a off_i mread
-       ----    ----    0101    mf_a a_o mwrite
-       ----    ----    0110    pc++ seq_rst

                                                            # pushw [m+#]
-       ----    1000    0001    pc++
-       ----    ----    0010    pc_a off_i mread
-       ----    ----    0011    mf_a a_i mread sel_high
-       ----    ----    0100    s_a a_o mwrite
-       ----    ----    0101    sl--

-       ----    ----    0110    pc_a off_i mread
-       ----    ----    0111    mf_a a_i mread
-       ----    ----    1000    s_a a_o mwrite
-       ----    ----    1001    sl--
-       ----    ----    1010    pc++ seq_rst

                                                            # popw [m+#]

-       ----    1001    0001    sl++
-       ----    ----    0010    s_a mread a_i
-       ----    ----    0011    pc++
-       ----    ----    0100    pc_a off_i mread
-       ----    ----    0101    mf_a a_o mwrite

-       ----    ----    0110    sl++
-       ----    ----    0111    s_a mread a_i
-       ----    ----    1000    pc_a off_i mread
-       ----    ----    1001    mf_a a_o mwrite sel_high

-       ----    ----    1010    pc++ seq_rst

                                                            # mov [m+#],[m+#]
-       ----    1010    0001    pc++
-       ----    ----    0010    pc_a off_i mread
-       ----    ----    0011    mf_a a_i mread
-       ----    ----    0100    pc++
-       ----    ----    0101    pc_a off_i mread
-       ----    ----    0110    mf_a a_o mwrite
-       ----    ----    0111    pc++ seq_rst
                                                            # mov2 [m+#],[m+#]


                                                            # movw x, [m+#]

-       ----    1110    0001    pc++
-       ----    ----    0010    pc_a off_i mread
-       ----    ----    0011    mf_a a_i mread
-       ----    ----    0100    xl_i a_o

-       ----    ----    0101    mf_a a_i mread sel_high
-       ----    ----    0110    xh_i a_o
-       ----    ----    0111    pc++ seq_rst





######################## INTERRUPTS        #########################

-       1111    1111    0000    sel_a        !override    # disable paging, override fetch for 0xff
-       ----    ----    0001    pc_switch
-       ----    ----    0010    sl_o sel_a mwrite         # (sel_a will set addr to isr regs + 0x01) [0xFFBD] = SL (sel_a disable paging)
-       ----    ----    0011    sh_o sel_a mwrite         # (sel_a will set addr to isr regs + 0x02) [0xFFBE] = SH
-       ----    ----    0100    a_o  sel_a mwrite s_rst   # (sel_a will set addr to isr regs + 0x03) [0xFFBF] = A  !!!!! WILL WRITE TO + 0x03 because of s_rst
-       ----    ----    0101    sl--                      # (SP = 0xffff)
-       ----    ----    0110    a_i xh_o
-       ----    ----    0111    a_o s_a mwrite            # (pc h will be at 0xffff) [0xFFFF] = PC_H
-       ----    ----    1000    a_i xl_o
-       ----    ----    1001    sl--                      # (SP = 0xfffe)
-       ----    ----    1010    a_o s_a mwrite            # (pc l will be at 0xfffe) [0xFFFE] = PC_L
-       ----    ----    1011    xl_i iv_o                 # (get vector, disable interrupts)
-       ----    ----    1100    a_i sh_o                  # (get 0xff)
-       ----    ----    1101    a_o xh_i                  # X = 0xFF00 | int_vec
-       ----    ----    1110    sl--                      # (SP = 0xfffd)
-       ----    ----    1111    seq_rst pc_switch









end
